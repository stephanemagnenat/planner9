/*
 * This file was generated by qdbusxml2cpp version 0.7
 * Command line was: qdbusxml2cpp -c AvahiEntryGroup -p avahi-entry-group.h EntryGroup.introspect.xml org.freedesktop.Avahi.EntryGroup
 *
 * qdbusxml2cpp is Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef AVAHI_ENTRY_GROUP_H_1244384396
#define AVAHI_ENTRY_GROUP_H_1244384396

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>
#include "avahi-marshall.h"

/*
 * Proxy class for interface org.freedesktop.Avahi.EntryGroup
 */
class AvahiEntryGroup: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.freedesktop.Avahi.EntryGroup"; }

public:
    AvahiEntryGroup(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = 0);

    ~AvahiEntryGroup();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<> AddAddress(int interface, int protocol, uint flags, const QString &name, const QString &address)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(interface) << qVariantFromValue(protocol) << qVariantFromValue(flags) << qVariantFromValue(name) << qVariantFromValue(address);
        return asyncCallWithArgumentList(QLatin1String("AddAddress"), argumentList);
    }

    inline QDBusPendingReply<> AddRecord(int interface, int protocol, uint flags, const QString &name, ushort clazz, ushort type, uint ttl, const QByteArray &rdata)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(interface) << qVariantFromValue(protocol) << qVariantFromValue(flags) << qVariantFromValue(name) << qVariantFromValue(clazz) << qVariantFromValue(type) << qVariantFromValue(ttl) << qVariantFromValue(rdata);
        return asyncCallWithArgumentList(QLatin1String("AddRecord"), argumentList);
    }

    inline QDBusPendingReply<> AddService(int interface, int protocol, uint flags, const QString &name, const QString &type, const QString &domain, const QString &host, ushort port, const QList<QByteArray> &txt)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(interface) << qVariantFromValue(protocol) << qVariantFromValue(flags) << qVariantFromValue(name) << qVariantFromValue(type) << qVariantFromValue(domain) << qVariantFromValue(host) << qVariantFromValue(port) << qVariantFromValue(txt);
        return asyncCallWithArgumentList(QLatin1String("AddService"), argumentList);
    }

    inline QDBusPendingReply<> AddServiceSubtype(int interface, int protocol, uint flags, const QString &name, const QString &type, const QString &domain, const QString &subtype)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(interface) << qVariantFromValue(protocol) << qVariantFromValue(flags) << qVariantFromValue(name) << qVariantFromValue(type) << qVariantFromValue(domain) << qVariantFromValue(subtype);
        return asyncCallWithArgumentList(QLatin1String("AddServiceSubtype"), argumentList);
    }

    inline QDBusPendingReply<> Commit()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Commit"), argumentList);
    }

    inline QDBusPendingReply<> Free()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Free"), argumentList);
    }

    inline QDBusPendingReply<int> GetState()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("GetState"), argumentList);
    }

    inline QDBusPendingReply<bool> IsEmpty()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("IsEmpty"), argumentList);
    }

    inline QDBusPendingReply<> Reset()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QLatin1String("Reset"), argumentList);
    }

    inline QDBusPendingReply<> UpdateServiceTxt(int interface, int protocol, uint flags, const QString &name, const QString &type, const QString &domain, const QList<QByteArray> &txt)
    {
        QList<QVariant> argumentList;
        argumentList << qVariantFromValue(interface) << qVariantFromValue(protocol) << qVariantFromValue(flags) << qVariantFromValue(name) << qVariantFromValue(type) << qVariantFromValue(domain) << qVariantFromValue(txt);
        return asyncCallWithArgumentList(QLatin1String("UpdateServiceTxt"), argumentList);
    }

Q_SIGNALS: // SIGNALS
    void StateChanged(int state, const QString &error);
};

namespace org {
  namespace freedesktop {
    namespace Avahi {
      typedef ::AvahiEntryGroup EntryGroup;
    }
  }
}

#endif
